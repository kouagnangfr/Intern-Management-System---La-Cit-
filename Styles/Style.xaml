<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--Mise en forme des images-->
    <Style x:Key="Sty_Img"
           TargetType="Image">
        <Setter Property="HorizontalAlignment"  Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Margin" Value="22,0,0,0" />
    </Style>



    <!--Mise en forme du text-->
    <Style x:Key="Sty_txt" TargetType="TextBlock">
        <Setter Property="FontFamily"  Value="/Fonts/#Rubik" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="white" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="70,0,0,0" />
    </Style>



    <!--Mise en forme et transition des pages-->
    <Style x:Key="Page_Style" TargetType="{x:Type UserControl}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0" Y="50" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Collapsed">
                <Setter Property="Opacity" Value="0" />
            </Trigger>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1"
                                         From="0" To="1" />
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                         From="50" To="0" Duration="0:0:0.8" DecelerationRatio="0.6" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>



    <!--Mise en forme des buttons-->
    <Style x:Key="Btn_Sty" TargetType="RadioButton">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"  Height="50" Width="228" BorderThickness="0">
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBackground" Color="#00a15e" />
                        </Border.Background>
                        <Grid>
                            <Border x:Name="Indicator" Height="35" Width="4" HorizontalAlignment="Left" VerticalAlignment="Center"
                                    Background="White" Visibility="Collapsed" CornerRadius="2" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Border.MouseEnter" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#00a15e" To="black" Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="black" To="#00a15e" Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="black" />
                            <Setter Property="Visibility" TargetName="Indicator" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <!--Mise en forme du bouton eteindre-->
    <ImageBrush x:Key="close_app_def"
                ImageSource="/Images/eteindre2.png"
                Stretch="None" />

    <ImageBrush x:Key="close_app_mo"
                ImageSource="/Images/eteindre1.png"
                Stretch="None" />
    <Style x:Key="Etein_Sty" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40" />
        <Setter Property="Width"  Value="40" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,15,15,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="0"  Background="{StaticResource close_app_def}">
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource close_app_mo}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>